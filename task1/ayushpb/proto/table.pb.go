// Code generated by protoc-gen-go. DO NOT EDIT.
// source: table.proto

package ayushpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TableRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TableRequest) Reset()         { *m = TableRequest{} }
func (m *TableRequest) String() string { return proto.CompactTextString(m) }
func (*TableRequest) ProtoMessage()    {}
func (*TableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_448a2743262f7a00, []int{0}
}

func (m *TableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableRequest.Unmarshal(m, b)
}
func (m *TableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableRequest.Marshal(b, m, deterministic)
}
func (m *TableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableRequest.Merge(m, src)
}
func (m *TableRequest) XXX_Size() int {
	return xxx_messageInfo_TableRequest.Size(m)
}
func (m *TableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TableRequest proto.InternalMessageInfo

func (m *TableRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type TableResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TableResponse) Reset()         { *m = TableResponse{} }
func (m *TableResponse) String() string { return proto.CompactTextString(m) }
func (*TableResponse) ProtoMessage()    {}
func (*TableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_448a2743262f7a00, []int{1}
}

func (m *TableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableResponse.Unmarshal(m, b)
}
func (m *TableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableResponse.Marshal(b, m, deterministic)
}
func (m *TableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableResponse.Merge(m, src)
}
func (m *TableResponse) XXX_Size() int {
	return xxx_messageInfo_TableResponse.Size(m)
}
func (m *TableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TableResponse proto.InternalMessageInfo

func (m *TableResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type GreetingsRequest struct {
	A                    string   `protobuf:"bytes,1,opt,name=a,proto3" json:"a,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetingsRequest) Reset()         { *m = GreetingsRequest{} }
func (m *GreetingsRequest) String() string { return proto.CompactTextString(m) }
func (*GreetingsRequest) ProtoMessage()    {}
func (*GreetingsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_448a2743262f7a00, []int{2}
}

func (m *GreetingsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetingsRequest.Unmarshal(m, b)
}
func (m *GreetingsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetingsRequest.Marshal(b, m, deterministic)
}
func (m *GreetingsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetingsRequest.Merge(m, src)
}
func (m *GreetingsRequest) XXX_Size() int {
	return xxx_messageInfo_GreetingsRequest.Size(m)
}
func (m *GreetingsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetingsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GreetingsRequest proto.InternalMessageInfo

func (m *GreetingsRequest) GetA() string {
	if m != nil {
		return m.A
	}
	return ""
}

type GreetingsResponse struct {
	B                    string   `protobuf:"bytes,1,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetingsResponse) Reset()         { *m = GreetingsResponse{} }
func (m *GreetingsResponse) String() string { return proto.CompactTextString(m) }
func (*GreetingsResponse) ProtoMessage()    {}
func (*GreetingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_448a2743262f7a00, []int{3}
}

func (m *GreetingsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetingsResponse.Unmarshal(m, b)
}
func (m *GreetingsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetingsResponse.Marshal(b, m, deterministic)
}
func (m *GreetingsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetingsResponse.Merge(m, src)
}
func (m *GreetingsResponse) XXX_Size() int {
	return xxx_messageInfo_GreetingsResponse.Size(m)
}
func (m *GreetingsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetingsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GreetingsResponse proto.InternalMessageInfo

func (m *GreetingsResponse) GetB() string {
	if m != nil {
		return m.B
	}
	return ""
}

type DivisorResponse struct {
	Num                  int32    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DivisorResponse) Reset()         { *m = DivisorResponse{} }
func (m *DivisorResponse) String() string { return proto.CompactTextString(m) }
func (*DivisorResponse) ProtoMessage()    {}
func (*DivisorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_448a2743262f7a00, []int{4}
}

func (m *DivisorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DivisorResponse.Unmarshal(m, b)
}
func (m *DivisorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DivisorResponse.Marshal(b, m, deterministic)
}
func (m *DivisorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DivisorResponse.Merge(m, src)
}
func (m *DivisorResponse) XXX_Size() int {
	return xxx_messageInfo_DivisorResponse.Size(m)
}
func (m *DivisorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DivisorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DivisorResponse proto.InternalMessageInfo

func (m *DivisorResponse) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func init() {
	proto.RegisterType((*TableRequest)(nil), "ayush.tableRequest")
	proto.RegisterType((*TableResponse)(nil), "ayush.tableResponse")
	proto.RegisterType((*GreetingsRequest)(nil), "ayush.greetingsRequest")
	proto.RegisterType((*GreetingsResponse)(nil), "ayush.greetingsResponse")
	proto.RegisterType((*DivisorResponse)(nil), "ayush.divisorResponse")
}

func init() { proto.RegisterFile("table.proto", fileDescriptor_448a2743262f7a00) }

var fileDescriptor_448a2743262f7a00 = []byte{
	// 256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0x3b, 0x94, 0x5d, 0xe9, 0xb8, 0x62, 0x1b, 0xa5, 0x96, 0x9e, 0x6a, 0x04, 0xed, 0x69,
	0x11, 0x45, 0xf0, 0xe0, 0xc9, 0x0a, 0xde, 0xd7, 0x9b, 0xb7, 0xa4, 0x0e, 0x75, 0x61, 0xbb, 0x59,
	0x33, 0x49, 0xc1, 0xbf, 0xe7, 0x2f, 0x93, 0xa6, 0xd9, 0x52, 0x6b, 0x6f, 0x99, 0x37, 0x5f, 0xde,
	0xcc, 0x63, 0xf0, 0xd8, 0x29, 0x5d, 0x51, 0xde, 0x58, 0xe3, 0x8c, 0x48, 0xd4, 0xb7, 0xe7, 0x4f,
	0x79, 0x8d, 0x59, 0x50, 0x0b, 0xfa, 0xf2, 0xc4, 0x4e, 0x0c, 0x31, 0xad, 0xfd, 0x52, 0x93, 0x1d,
	0xc1, 0x04, 0xa6, 0x49, 0x11, 0x2b, 0x79, 0x83, 0x27, 0x91, 0xe3, 0xc6, 0xd4, 0x4c, 0x6b, 0xd0,
	0x12, 0xfb, 0xca, 0xb5, 0xe0, 0xa6, 0x92, 0x13, 0xec, 0x2f, 0x2c, 0x91, 0x2b, 0xeb, 0x05, 0xb7,
	0xa6, 0x19, 0x82, 0x0a, 0x58, 0xaf, 0x00, 0x25, 0x2f, 0x71, 0xb0, 0x43, 0x44, 0xbb, 0x0c, 0x41,
	0xb7, 0x88, 0x96, 0x57, 0x78, 0xfa, 0x51, 0xae, 0x4a, 0x36, 0x76, 0x0b, 0xf4, 0xb1, 0x5b, 0xfb,
	0x65, 0x1c, 0xb6, 0x7e, 0xde, 0xfd, 0x00, 0x0e, 0x66, 0xaa, 0x9a, 0xfb, 0x4a, 0x39, 0x63, 0xdf,
	0xc8, 0xae, 0xca, 0x39, 0x89, 0x07, 0x4c, 0xc3, 0xa2, 0x2c, 0xce, 0xf2, 0x10, 0x31, 0xdf, 0xcd,
	0x37, 0x3e, 0xff, 0x2b, 0x6e, 0xcc, 0x65, 0x47, 0x3c, 0x61, 0x12, 0x96, 0x12, 0x17, 0x11, 0xd8,
	0x0f, 0x31, 0x1e, 0xfd, 0x6f, 0x6c, 0x7f, 0x3f, 0x62, 0xf7, 0x75, 0xf6, 0x72, 0x78, 0xe2, 0x30,
	0x8a, 0x7b, 0x81, 0x64, 0x67, 0x0a, 0xb7, 0xf0, 0xdc, 0x7b, 0x3f, 0x0a, 0xed, 0x46, 0xeb, 0x34,
	0x1c, 0xe6, 0xfe, 0x37, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x90, 0xc1, 0x1d, 0xa7, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculatorServiceClient is the client API for CalculatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorServiceClient interface {
	// Unary
	Tables(ctx context.Context, in *TableRequest, opts ...grpc.CallOption) (*TableResponse, error)
	Greet(ctx context.Context, in *GreetingsRequest, opts ...grpc.CallOption) (*GreetingsResponse, error)
	// BiDirectional Streaming
	GCD(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_GCDClient, error)
}

type calculatorServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculatorServiceClient(cc *grpc.ClientConn) CalculatorServiceClient {
	return &calculatorServiceClient{cc}
}

func (c *calculatorServiceClient) Tables(ctx context.Context, in *TableRequest, opts ...grpc.CallOption) (*TableResponse, error) {
	out := new(TableResponse)
	err := c.cc.Invoke(ctx, "/ayush.CalculatorService/tables", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) Greet(ctx context.Context, in *GreetingsRequest, opts ...grpc.CallOption) (*GreetingsResponse, error) {
	out := new(GreetingsResponse)
	err := c.cc.Invoke(ctx, "/ayush.CalculatorService/greet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) GCD(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_GCDClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[0], "/ayush.CalculatorService/GCD", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceGCDClient{stream}
	return x, nil
}

type CalculatorService_GCDClient interface {
	Send(*TableRequest) error
	Recv() (*DivisorResponse, error)
	grpc.ClientStream
}

type calculatorServiceGCDClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceGCDClient) Send(m *TableRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorServiceGCDClient) Recv() (*DivisorResponse, error) {
	m := new(DivisorResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalculatorServiceServer is the server API for CalculatorService service.
type CalculatorServiceServer interface {
	// Unary
	Tables(context.Context, *TableRequest) (*TableResponse, error)
	Greet(context.Context, *GreetingsRequest) (*GreetingsResponse, error)
	// BiDirectional Streaming
	GCD(CalculatorService_GCDServer) error
}

// UnimplementedCalculatorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServiceServer struct {
}

func (*UnimplementedCalculatorServiceServer) Tables(ctx context.Context, req *TableRequest) (*TableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Tables not implemented")
}
func (*UnimplementedCalculatorServiceServer) Greet(ctx context.Context, req *GreetingsRequest) (*GreetingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Greet not implemented")
}
func (*UnimplementedCalculatorServiceServer) GCD(srv CalculatorService_GCDServer) error {
	return status.Errorf(codes.Unimplemented, "method GCD not implemented")
}

func RegisterCalculatorServiceServer(s *grpc.Server, srv CalculatorServiceServer) {
	s.RegisterService(&_CalculatorService_serviceDesc, srv)
}

func _CalculatorService_Tables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).Tables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ayush.CalculatorService/Tables",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).Tables(ctx, req.(*TableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_Greet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GreetingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).Greet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ayush.CalculatorService/Greet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).Greet(ctx, req.(*GreetingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_GCD_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServiceServer).GCD(&calculatorServiceGCDServer{stream})
}

type CalculatorService_GCDServer interface {
	Send(*DivisorResponse) error
	Recv() (*TableRequest, error)
	grpc.ServerStream
}

type calculatorServiceGCDServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceGCDServer) Send(m *DivisorResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorServiceGCDServer) Recv() (*TableRequest, error) {
	m := new(TableRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CalculatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ayush.CalculatorService",
	HandlerType: (*CalculatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "tables",
			Handler:    _CalculatorService_Tables_Handler,
		},
		{
			MethodName: "greet",
			Handler:    _CalculatorService_Greet_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GCD",
			Handler:       _CalculatorService_GCD_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "table.proto",
}
